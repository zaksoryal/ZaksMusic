/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./app.js":
/*!****************!*\
  !*** ./app.js ***!
  \****************/
/***/ (() => {

eval("function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && \"number\" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return e; }; var t, e = {}, r = Object.prototype, n = r.hasOwnProperty, o = Object.defineProperty || function (t, e, r) { t[e] = r.value; }, i = \"function\" == typeof Symbol ? Symbol : {}, a = i.iterator || \"@@iterator\", c = i.asyncIterator || \"@@asyncIterator\", u = i.toStringTag || \"@@toStringTag\"; function define(t, e, r) { return Object.defineProperty(t, e, { value: r, enumerable: !0, configurable: !0, writable: !0 }), t[e]; } try { define({}, \"\"); } catch (t) { define = function define(t, e, r) { return t[e] = r; }; } function wrap(t, e, r, n) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype), c = new Context(n || []); return o(a, \"_invoke\", { value: makeInvokeMethod(t, r, c) }), a; } function tryCatch(t, e, r) { try { return { type: \"normal\", arg: t.call(e, r) }; } catch (t) { return { type: \"throw\", arg: t }; } } e.wrap = wrap; var h = \"suspendedStart\", l = \"suspendedYield\", f = \"executing\", s = \"completed\", y = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var p = {}; define(p, a, function () { return this; }); var d = Object.getPrototypeOf, v = d && d(d(values([]))); v && v !== r && n.call(v, a) && (p = v); var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p); function defineIteratorMethods(t) { [\"next\", \"throw\", \"return\"].forEach(function (e) { define(t, e, function (t) { return this._invoke(e, t); }); }); } function AsyncIterator(t, e) { function invoke(r, o, i, a) { var c = tryCatch(t[r], t, o); if (\"throw\" !== c.type) { var u = c.arg, h = u.value; return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) { invoke(\"next\", t, i, a); }, function (t) { invoke(\"throw\", t, i, a); }) : e.resolve(h).then(function (t) { u.value = t, i(u); }, function (t) { return invoke(\"throw\", t, i, a); }); } a(c.arg); } var r; o(this, \"_invoke\", { value: function value(t, n) { function callInvokeWithMethodAndArg() { return new e(function (e, r) { invoke(t, n, e, r); }); } return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(e, r, n) { var o = h; return function (i, a) { if (o === f) throw Error(\"Generator is already running\"); if (o === s) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var c = n.delegate; if (c) { var u = maybeInvokeDelegate(c, n); if (u) { if (u === y) continue; return u; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (o === h) throw o = s, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = f; var p = tryCatch(e, r, n); if (\"normal\" === p.type) { if (o = n.done ? s : l, p.arg === y) continue; return { value: p.arg, done: n.done }; } \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg); } }; } function maybeInvokeDelegate(e, r) { var n = r.method, o = e.iterator[n]; if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y; var i = tryCatch(o, e.iterator, r.arg); if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y; var a = i.arg; return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y); } function pushTryEntry(t) { var e = { tryLoc: t[0] }; 1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e); } function resetTryEntry(t) { var e = t.completion || {}; e.type = \"normal\", delete e.arg, t.completion = e; } function Context(t) { this.tryEntries = [{ tryLoc: \"root\" }], t.forEach(pushTryEntry, this), this.reset(!0); } function values(e) { if (e || \"\" === e) { var r = e[a]; if (r) return r.call(e); if (\"function\" == typeof e.next) return e; if (!isNaN(e.length)) { var o = -1, i = function next() { for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next; return next.value = t, next.done = !0, next; }; return i.next = i; } } throw new TypeError(_typeof(e) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), o(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) { var e = \"function\" == typeof t && t.constructor; return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name)); }, e.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t; }, e.awrap = function (t) { return { __await: t }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () { return this; }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(wrap(t, r, n, o), i); return e.isGeneratorFunction(r) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () { return this; }), define(g, \"toString\", function () { return \"[object Generator]\"; }), e.keys = function (t) { var e = Object(t), r = []; for (var n in e) r.push(n); return r.reverse(), function next() { for (; r.length;) { var t = r.pop(); if (t in e) return next.value = t, next.done = !1, next; } return next.done = !0, next; }; }, e.values = values, Context.prototype = { constructor: Context, reset: function reset(e) { if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0].completion; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(e) { if (this.done) throw e; var r = this; function handle(n, o) { return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o; } for (var o = this.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i.completion; if (\"root\" === i.tryLoc) return handle(\"end\"); if (i.tryLoc <= this.prev) { var c = n.call(i, \"catchLoc\"), u = n.call(i, \"finallyLoc\"); if (c && u) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } else if (c) { if (this.prev < i.catchLoc) return handle(i.catchLoc, !0); } else { if (!u) throw Error(\"try statement without catch or finally\"); if (this.prev < i.finallyLoc) return handle(i.finallyLoc); } } } }, abrupt: function abrupt(t, e) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var o = this.tryEntries[r]; if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) { var i = o; break; } } i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null); var a = i ? i.completion : {}; return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a); }, complete: function complete(t, e) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y; }, finish: function finish(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y; } }, \"catch\": function _catch(t) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var r = this.tryEntries[e]; if (r.tryLoc === t) { var n = r.completion; if (\"throw\" === n.type) { var o = n.arg; resetTryEntry(r); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(e, r, n) { return this.delegate = { iterator: values(e), resultName: r, nextLoc: n }, \"next\" === this.method && (this.arg = t), y; } }, e; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\nvar lastFmUsername = \"zaksoryal\";\nvar apiKey = \"bf0701b5a81598bd134b1fcd63918820\";\nvar spotifyClientId = \"5eb05fc56a1f42b797a9aa423f6813f0\";\nvar spotifyClientSecret = \"e9f9ddd250c94bcbbe1dafd6ee361956\";\nvar apiUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=1\");\n\n// Function to fetch the currently playing song\nfunction getCurrentlyPlayingSong() {\n  return _getCurrentlyPlayingSong.apply(this, arguments);\n} // Function to get Spotify preview URL\nfunction _getCurrentlyPlayingSong() {\n  _getCurrentlyPlayingSong = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var recentTracksApiUrl, recentTracksResponse, recentTracksData, track, isPlaying, songElement, trackInfoApiUrl, trackInfoResponse, trackInfoData, trackInfo, durationMs, minutes, seconds, previewUrl, albumArt, previewAudio, audioEnabled;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          recentTracksApiUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=1\");\n          _context.prev = 1;\n          _context.next = 4;\n          return fetch(recentTracksApiUrl);\n        case 4:\n          recentTracksResponse = _context.sent;\n          _context.next = 7;\n          return recentTracksResponse.json();\n        case 7:\n          recentTracksData = _context.sent;\n          track = recentTracksData.recenttracks.track[0]; // Get the first track (most recent)\n          isPlaying = track['@attr'] && track['@attr'].nowplaying === 'true';\n          songElement = document.getElementById('song');\n          if (!isPlaying) {\n            _context.next = 33;\n            break;\n          }\n          trackInfoApiUrl = \"https://ws.audioscrobbler.com/2.0/?method=track.getInfo&api_key=\".concat(apiKey, \"&artist=\").concat(encodeURIComponent(track.artist['#text']), \"&track=\").concat(encodeURIComponent(track.name), \"&username=\").concat(lastFmUsername, \"&format=json\");\n          _context.next = 15;\n          return fetch(trackInfoApiUrl);\n        case 15:\n          trackInfoResponse = _context.sent;\n          _context.next = 18;\n          return trackInfoResponse.json();\n        case 18:\n          trackInfoData = _context.sent;\n          trackInfo = trackInfoData.track;\n          durationMs = trackInfo.duration;\n          minutes = Math.floor(durationMs / 60000);\n          seconds = (durationMs % 60000 / 1000).toFixed(0);\n          _context.next = 25;\n          return getSpotifyPreviewUrl(track.artist['#text'], track.name);\n        case 25:\n          previewUrl = _context.sent;\n          console.log(\"Preview URL: \".concat(previewUrl));\n          songElement.innerHTML = \"\\n                <div class=\\\"song-container\\\">\\n                    <div class=\\\"current-song\\\">\\n                        <h2 id=\\\"currentlyPlaying\\\">Currently Playing</h2>\\n                        <h3><a href=\\\"\".concat(track.url, \"\\\" target=\\\"_blank\\\">\").concat(track.name, \"</a></h3>\\n                        <h3>by <span><b>\").concat(track.artist['#text'], \"</b></span> on <i>\").concat(track.album['#text'], \"</i></h3>\\n                        <img id=\\\"albumArt\\\" src=\\\"\").concat(track.image[2]['#text'] || 'default-image.jpg', \"\\\" alt=\\\"Album Art\\\">\\n                        </br>\\n                    </div>\\n                    <div class=\\\"song-stats\\\">\\n                        <p>Duration: \").concat(minutes, \":\").concat(seconds < 10 ? '0' : '').concat(seconds, \"</p>\\n                        <p>Personal plays: \").concat(trackInfo.userplaycount, \"</p>\\n                        <p>Total listeners: \").concat(trackInfo.listeners, \"</p>\\n                        <p>Total playcount: \").concat(trackInfo.playcount, \"</p>\\n                    </div>\\n                    <audio id=\\\"previewAudio\\\" src=\\\"\").concat(previewUrl, \"\\\" preload=\\\"none\\\"></audio>\\n                </div>\\n            \");\n          albumArt = document.getElementById('albumArt');\n          previewAudio = document.getElementById('previewAudio');\n          if (previewUrl) {\n            previewAudio.src = previewUrl;\n            audioEnabled = false;\n            albumArt.addEventListener('click', function () {\n              if (!audioEnabled) {\n                previewAudio.play().then(function () {\n                  audioEnabled = true;\n                  previewAudio.pause();\n                })[\"catch\"](function (error) {\n                  console.error('Error playing audio:', error);\n                });\n              }\n            });\n            albumArt.addEventListener('mouseover', function () {\n              if (audioEnabled) {\n                previewAudio.play();\n              }\n            });\n            albumArt.addEventListener('mouseout', function () {\n              if (audioEnabled) {\n                previewAudio.pause();\n              }\n            });\n          } else {\n            console.error('No preview URL available:', error);\n          }\n          _context.next = 34;\n          break;\n        case 33:\n          songElement.innerHTML = \"\\n                <p>I'm not listening to anything right now :(</p>\\n            \";\n        case 34:\n          _context.next = 39;\n          break;\n        case 36:\n          _context.prev = 36;\n          _context.t0 = _context[\"catch\"](1);\n          console.error('Error fetching currently playing song:', _context.t0);\n        case 39:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[1, 36]]);\n  }));\n  return _getCurrentlyPlayingSong.apply(this, arguments);\n}\nfunction getSpotifyPreviewUrl(_x, _x2) {\n  return _getSpotifyPreviewUrl.apply(this, arguments);\n} // Function to display recently played tracks\nfunction _getSpotifyPreviewUrl() {\n  _getSpotifyPreviewUrl = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(artist, track) {\n    var authUrl, searchUrl, authResponse, authData, accessToken, response, data, trackItem;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          authUrl = 'https://accounts.spotify.com/api/token';\n          searchUrl = \"https://api.spotify.com/v1/search?q=track:\".concat(encodeURIComponent(track), \"%20artist:\").concat(encodeURIComponent(artist), \"&type=track&limit=1\");\n          _context2.prev = 2;\n          _context2.next = 5;\n          return fetch(authUrl, {\n            method: 'POST',\n            headers: {\n              'Authorization': 'Basic ' + btoa(client_id + ':' + client_secret),\n              'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            body: 'grant_type=client_credentials'\n          });\n        case 5:\n          authResponse = _context2.sent;\n          _context2.next = 8;\n          return authResponse.json();\n        case 8:\n          authData = _context2.sent;\n          accessToken = authData.access_token; // Fetch track preview URL\n          _context2.next = 12;\n          return fetch(searchUrl, {\n            headers: {\n              'Authorization': \"Bearer \".concat(accessToken)\n            }\n          });\n        case 12:\n          response = _context2.sent;\n          _context2.next = 15;\n          return response.json();\n        case 15:\n          data = _context2.sent;\n          if (!(data.tracks && data.tracks.items && data.tracks.items.length > 0)) {\n            _context2.next = 22;\n            break;\n          }\n          trackItem = data.tracks.items[0];\n          console.log(\"Found track: \".concat(trackItem.name, \" by \").concat(trackItem.artists.map(function (artist) {\n            return artist.name;\n          }).join(', ')));\n          return _context2.abrupt(\"return\", trackItem.preview_url);\n        case 22:\n          throw new Error('No tracks found');\n        case 23:\n          _context2.next = 29;\n          break;\n        case 25:\n          _context2.prev = 25;\n          _context2.t0 = _context2[\"catch\"](2);\n          console.error('Error fetching Spotify preview URL:', _context2.t0);\n          return _context2.abrupt(\"return\", null);\n        case 29:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[2, 25]]);\n  }));\n  return _getSpotifyPreviewUrl.apply(this, arguments);\n}\nfunction getRecentTracks() {\n  return _getRecentTracks.apply(this, arguments);\n} // Fetch top artists\nfunction _getRecentTracks() {\n  _getRecentTracks = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n    var recentTracksUrl, response, data, tracks, recentTracksElement, nowPlayingTrack, filteredTracks, tracksHtml;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          recentTracksUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.getrecenttracks&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=20\"); // Fetch 20 tracks\n          _context3.prev = 1;\n          _context3.next = 4;\n          return fetch(recentTracksUrl);\n        case 4:\n          response = _context3.sent;\n          _context3.next = 7;\n          return response.json();\n        case 7:\n          data = _context3.sent;\n          tracks = data.recenttracks.track;\n          recentTracksElement = document.getElementById('recent-tracks'); // Find the currently playing track\n          nowPlayingTrack = tracks.find(function (track) {\n            return track['@attr'] && track['@attr'].nowplaying === 'true';\n          }); // Filter out the currently playing track\n          filteredTracks = tracks.filter(function (track) {\n            return track !== nowPlayingTrack;\n          });\n          if (filteredTracks.length > 0) {\n            tracksHtml = '<h2>Recently Played</h2> <ul class=\"two-columns\">';\n            filteredTracks.forEach(function (track) {\n              var trackName = track.name;\n              var artistName = track.artist['#text'];\n              var albumArt = track.image[1]['#text'] || 'default-image.jpg';\n              var listenedAt = track.date ? new Date(track.date.uts * 1000).toLocaleString() : 'Unknown time';\n              tracksHtml += \"\\n                    <li>\\n                        <img src=\\\"\".concat(albumArt, \"\\\" alt=\\\"Album Art\\\" width=\\\"50\\\" height=\\\"50\\\">\\n                        <strong><a href=\\\"\").concat(track.url, \"\\\" target=\\\"_blank\\\">\").concat(trackName, \"</a></strong> by \").concat(artistName, \"\\n                        <br>\\n                        <small>Listened at: \").concat(listenedAt, \"</small>\\n                    </li>\\n                \");\n            });\n            tracksHtml += '</ul>';\n            recentTracksElement.innerHTML = tracksHtml;\n          } else {\n            recentTracksElement.innerHTML = '<p>No recent tracks found.</p>';\n          }\n          _context3.next = 18;\n          break;\n        case 15:\n          _context3.prev = 15;\n          _context3.t0 = _context3[\"catch\"](1);\n          console.error('Error fetching recent tracks:', _context3.t0);\n        case 18:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3, null, [[1, 15]]);\n  }));\n  return _getRecentTracks.apply(this, arguments);\n}\nfunction getTopArtists() {\n  return _getTopArtists.apply(this, arguments);\n} // Fetch top albums\nfunction _getTopArtists() {\n  _getTopArtists = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n    var topArtistsUrl, response, data, topArtists, topArtistsElement, artistsHtml;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          topArtistsUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.gettopartists&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=5\");\n          _context4.prev = 1;\n          _context4.next = 4;\n          return fetch(topArtistsUrl);\n        case 4:\n          response = _context4.sent;\n          _context4.next = 7;\n          return response.json();\n        case 7:\n          data = _context4.sent;\n          topArtists = data.topartists.artist; // Get top artists from the response\n          topArtistsElement = document.getElementById('top-artists');\n          if (topArtists.length > 0) {\n            artistsHtml = '<ul>';\n            topArtists.forEach(function (artist) {\n              artistsHtml += \"<li><strong>\".concat(artist.name, \"</strong> - \").concat(artist.playcount, \" plays</li>\");\n            });\n            artistsHtml += '</ul>';\n            topArtistsElement.innerHTML = artistsHtml;\n          } else {\n            topArtistsElement.innerHTML = '<p>No top artists found.</p>';\n          }\n          _context4.next = 17;\n          break;\n        case 13:\n          _context4.prev = 13;\n          _context4.t0 = _context4[\"catch\"](1);\n          console.error('Error fetching top artists:', _context4.t0);\n          document.getElementById('top-artists').innerHTML = \"<p>Error: \".concat(_context4.t0.message, \"</p>\");\n        case 17:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4, null, [[1, 13]]);\n  }));\n  return _getTopArtists.apply(this, arguments);\n}\nfunction getTopAlbums() {\n  return _getTopAlbums.apply(this, arguments);\n} // Fetch top tracks\nfunction _getTopAlbums() {\n  _getTopAlbums = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n    var topAlbumsUrl, response, data, topAlbums, topAlbumsElement, albumsHtml;\n    return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n      while (1) switch (_context5.prev = _context5.next) {\n        case 0:\n          topAlbumsUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.gettopalbums&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=5\");\n          _context5.prev = 1;\n          _context5.next = 4;\n          return fetch(topAlbumsUrl);\n        case 4:\n          response = _context5.sent;\n          _context5.next = 7;\n          return response.json();\n        case 7:\n          data = _context5.sent;\n          topAlbums = data.topalbums.album; // Get top albums from the response\n          topAlbumsElement = document.getElementById('top-albums');\n          if (topAlbums.length > 0) {\n            albumsHtml = '<ul>';\n            topAlbums.forEach(function (album) {\n              albumsHtml += \"<li><strong>\".concat(album.name, \"</strong> by \").concat(album.artist.name, \" - \").concat(album.playcount, \" plays</li>\");\n            });\n            albumsHtml += '</ul>';\n            topAlbumsElement.innerHTML = albumsHtml;\n          } else {\n            topAlbumsElement.innerHTML = '<p>No top albums found.</p>';\n          }\n          _context5.next = 17;\n          break;\n        case 13:\n          _context5.prev = 13;\n          _context5.t0 = _context5[\"catch\"](1);\n          console.error('Error fetching top albums:', _context5.t0);\n          document.getElementById('top-albums').innerHTML = \"<p>Error: \".concat(_context5.t0.message, \"</p>\");\n        case 17:\n        case \"end\":\n          return _context5.stop();\n      }\n    }, _callee5, null, [[1, 13]]);\n  }));\n  return _getTopAlbums.apply(this, arguments);\n}\nfunction getTopTracks() {\n  return _getTopTracks.apply(this, arguments);\n} // Function to display user stats\nfunction _getTopTracks() {\n  _getTopTracks = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n    var topTracksUrl, response, data, topTracks, topTracksElement, tracksHtml;\n    return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n      while (1) switch (_context6.prev = _context6.next) {\n        case 0:\n          topTracksUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.gettoptracks&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=5\");\n          _context6.prev = 1;\n          _context6.next = 4;\n          return fetch(topTracksUrl);\n        case 4:\n          response = _context6.sent;\n          _context6.next = 7;\n          return response.json();\n        case 7:\n          data = _context6.sent;\n          topTracks = data.toptracks.track; // Get top tracks from the response\n          topTracksElement = document.getElementById('top-tracks');\n          if (topTracks.length > 0) {\n            tracksHtml = '<ul>';\n            topTracks.forEach(function (track) {\n              tracksHtml += \"<li><strong>\".concat(track.name, \"</strong> by \").concat(track.artist.name, \" - \").concat(track.playcount, \" plays</li>\");\n            });\n            tracksHtml += '</ul>';\n            topTracksElement.innerHTML = tracksHtml;\n          } else {\n            topTracksElement.innerHTML = '<p>No top tracks found.</p>';\n          }\n          _context6.next = 17;\n          break;\n        case 13:\n          _context6.prev = 13;\n          _context6.t0 = _context6[\"catch\"](1);\n          console.error('Error fetching top tracks:', _context6.t0);\n          document.getElementById('top-tracks').innerHTML = \"<p>Error: \".concat(_context6.t0.message, \"</p>\");\n        case 17:\n        case \"end\":\n          return _context6.stop();\n      }\n    }, _callee6, null, [[1, 13]]);\n  }));\n  return _getTopTracks.apply(this, arguments);\n}\nfunction getUserStats() {\n  return _getUserStats.apply(this, arguments);\n} // Function to refresh all data\nfunction _getUserStats() {\n  _getUserStats = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n    var userInfoUrl, topArtistsUrl, weeklyTopArtistsUrl, _yield$Promise$all, _yield$Promise$all2, userInfoResponse, topArtistsResponse, weeklyTopArtistsResponse, userData, topArtistsData, weeklyTopArtistsData, statsHtml, accountCreationDate, currentDate, daysSinceCreation, averageSongsPerDay, topArtists, _iterator, _step, artist, artistInfoUrl, artistInfoResponse, artistInfoData, genres, statsElement, _statsElement;\n    return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n      while (1) switch (_context7.prev = _context7.next) {\n        case 0:\n          userInfoUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.getinfo&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json\");\n          topArtistsUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.gettopartists&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=5\");\n          weeklyTopArtistsUrl = \"https://ws.audioscrobbler.com/2.0/?method=user.getweeklyartistchart&user=\".concat(lastFmUsername, \"&api_key=\").concat(apiKey, \"&format=json&limit=5\");\n          _context7.prev = 3;\n          _context7.next = 6;\n          return Promise.all([fetch(userInfoUrl), fetch(topArtistsUrl), fetch(weeklyTopArtistsUrl)]);\n        case 6:\n          _yield$Promise$all = _context7.sent;\n          _yield$Promise$all2 = _slicedToArray(_yield$Promise$all, 3);\n          userInfoResponse = _yield$Promise$all2[0];\n          topArtistsResponse = _yield$Promise$all2[1];\n          weeklyTopArtistsResponse = _yield$Promise$all2[2];\n          _context7.next = 13;\n          return userInfoResponse.json();\n        case 13:\n          userData = _context7.sent;\n          _context7.next = 16;\n          return topArtistsResponse.json();\n        case 16:\n          topArtistsData = _context7.sent;\n          _context7.next = 19;\n          return weeklyTopArtistsResponse.json();\n        case 19:\n          weeklyTopArtistsData = _context7.sent;\n          // Construct HTML content\n          statsHtml = \"<p>Total number of songs listened to since September 2nd, 2024: <b>\".concat(userData.user.playcount, \"</b></p>\"); // Calculate and display average songs per day\n          accountCreationDate = new Date('2024-09-02');\n          currentDate = new Date();\n          daysSinceCreation = Math.floor((currentDate - accountCreationDate) / (1000 * 60 * 60 * 24));\n          averageSongsPerDay = Math.round(userData.user.playcount / daysSinceCreation);\n          statsHtml += \"<p>That's an average of <b>\".concat(averageSongsPerDay, \"</b> songs per day!</p>\");\n\n          // Adding top genres from top artists\n          statsHtml += \"<p><b>Top Genres (based on top artists):</b></p><ul>\";\n          topArtists = topArtistsData.topartists.artist;\n          _iterator = _createForOfIteratorHelper(topArtists);\n          _context7.prev = 29;\n          _iterator.s();\n        case 31:\n          if ((_step = _iterator.n()).done) {\n            _context7.next = 44;\n            break;\n          }\n          artist = _step.value;\n          artistInfoUrl = \"https://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=\".concat(encodeURIComponent(artist.name), \"&api_key=\").concat(apiKey, \"&format=json\");\n          _context7.next = 36;\n          return fetch(artistInfoUrl);\n        case 36:\n          artistInfoResponse = _context7.sent;\n          _context7.next = 39;\n          return artistInfoResponse.json();\n        case 39:\n          artistInfoData = _context7.sent;\n          // Try to fetch artist's tags as genres\n          genres = artistInfoData.artist.tags.tag.map(function (tag) {\n            return tag.name;\n          }).slice(0, 3); // Top 3 genres\n          statsHtml += \"<li>\".concat(artist.name, \": \").concat(genres.join(', '), \"</li>\");\n        case 42:\n          _context7.next = 31;\n          break;\n        case 44:\n          _context7.next = 49;\n          break;\n        case 46:\n          _context7.prev = 46;\n          _context7.t0 = _context7[\"catch\"](29);\n          _iterator.e(_context7.t0);\n        case 49:\n          _context7.prev = 49;\n          _iterator.f();\n          return _context7.finish(49);\n        case 52:\n          statsHtml += \"</ul>\";\n\n          // Adding weekly top artists\n          statsHtml += \"<p><b>Weekly Top Artists:</b></p><ul>\";\n          weeklyTopArtistsData.weeklyartistchart.artist.forEach(function (artist) {\n            statsHtml += \"<li>\".concat(artist.name, \" - \").concat(artist.playcount, \" plays</li>\");\n          });\n          statsHtml += \"</ul>\";\n\n          // Update the DOM\n          statsElement = document.getElementById('stats');\n          statsElement.innerHTML = statsHtml;\n          _context7.next = 65;\n          break;\n        case 60:\n          _context7.prev = 60;\n          _context7.t1 = _context7[\"catch\"](3);\n          console.error('Error fetching user stats:', _context7.t1);\n          _statsElement = document.getElementById('stats');\n          _statsElement.innerHTML = \"<p>Error: \".concat(_context7.t1.message, \"</p>\");\n        case 65:\n        case \"end\":\n          return _context7.stop();\n      }\n    }, _callee7, null, [[3, 60], [29, 46, 49, 52]]);\n  }));\n  return _getUserStats.apply(this, arguments);\n}\nfunction refreshData() {\n  getCurrentlyPlayingSong();\n  getUserStats();\n  getRecentTracks();\n  getTopArtists();\n  getTopAlbums();\n  getTopTracks();\n}\n\n// Initial call to load the data\nrefreshData();\n\n// Refresh all data every 10 seconds\nsetInterval(refreshData, 10000); // 10000 ms = 10 seconds\n\n//# sourceURL=webpack:///./app.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./app.js"]();
/******/ 	
/******/ })()
;